{"ast":null,"code":"import './App.css';\nimport Login from './Login'; // Import your Login component\nimport Lottie from \"lottie-react\";\nimport testanimation from \"./testanimation.json\";\nimport loginsuccessanimation from './testanimation.json';\nimport axios from 'axios'; // You might need to install axios via npm if you haven't already\n\nfunction App() {\n  const onLogin = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/unlimitedmarketplace/auth/login', {\n        username: username,\n        passwordHash: password\n      });\n      if (response && response.data) {\n        console.log('Login successful', response.data);\n        localStorage.setItem('token', response.data.token);\n      } else {\n        throw new Error('Invalid server response');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error; // This will be caught in the Login component\n    }\n  };\n  App();\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","Lottie","testanimation","loginsuccessanimation","axios","App","onLogin","username","password","response","post","passwordHash","data","console","log","localStorage","setItem","token","Error","error","_c","$RefreshReg$"],"sources":["C:/Users/acidburn/WebstormProjects/unlimitedmarketplace-fe/src/App.js"],"sourcesContent":["import './App.css';\nimport Login from './Login'; // Import your Login component\nimport Lottie from \"lottie-react\";\nimport testanimation from \"./testanimation.json\";\nimport loginsuccessanimation from './testanimation.json';\n\nimport axios from 'axios'; // You might need to install axios via npm if you haven't already\n\nfunction App() {\n    const onLogin = async (username, password) => {\n        try {\n            const response = await axios.post('http://localhost:8080/unlimitedmarketplace/auth/login', {\n                username:username,\n                passwordHash:password\n            });\n            if (response && response.data) {\n                console.log('Login successful', response.data);\n                localStorage.setItem('token', response.data.token);\n            } else {\n                throw new Error('Invalid server response');\n            }\n        } catch (error) {\n            console.error('Login failed:', error);\n            throw error; // This will be caught in the Login component\n        }\n    };\n\n    App()\n\n\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,qBAAqB,MAAM,sBAAsB;AAExD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,uDAAuD,EAAE;QACvFH,QAAQ,EAACA,QAAQ;QACjBI,YAAY,EAACH;MACjB,CAAC,CAAC;MACF,IAAIC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAACG,IAAI,CAAC;QAC9CG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACK,KAAK,CAAC;MACtD,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZN,OAAO,CAACM,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAEDd,GAAG,CAAC,CAAC;AAGT;AAACe,EAAA,GAtBQf,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}