{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acidburn\\\\WebstormProjects\\\\untitled2\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Lottie from \"lottie-react\";\nimport testanimation from './testanimation.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [signupPassword, setSignupPassword] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [showAnimation, setShowAnimation] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError(''); // Reset the error message on a new submit\n\n    // Here you would call the authentication service\n    try {\n      await onLogin(username, password);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to login: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n  const handleRegister = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/unlimitedmarketplace', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName: name,\n          email: email,\n          passwordHash: signupPassword\n        })\n      });\n      if (response.ok) {\n        setShowAnimation(true); // This will trigger the animation\n        setTimeout(() => setShowAnimation(false), 5000); // This will hide the animation after 5 seconds\n      } else {\n        const errorData = await response.json();\n        setError('Failed to register: ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Failed to register:', error);\n      setError('Failed to register: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        height: '300px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: testanimation,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container sign-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"A37jgixhMGAmY1cZhQluA0zcKYA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Lottie","testanimation","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","error","setError","isActive","setIsActive","name","setName","email","setEmail","signupPassword","setSignupPassword","isRegistered","setIsRegistered","showAnimation","setShowAnimation","handleSubmit","event","preventDefault","err","_err$response","_err$response$data","response","data","message","handleRegister","fetch","method","headers","body","JSON","stringify","userName","passwordHash","ok","setTimeout","errorData","json","console","children","style","width","height","margin","animationData","loop","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/acidburn/WebstormProjects/untitled2/src/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Lottie from \"lottie-react\";\r\nimport testanimation from './testanimation.json';\r\n\r\n\r\nfunction Login({ onLogin }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [signupPassword, setSignupPassword] = useState('');\r\n\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [showAnimation, setShowAnimation] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setError(''); // Reset the error message on a new submit\r\n\r\n        // Here you would call the authentication service\r\n        try {\r\n            await onLogin(username, password);\r\n        } catch (err) {\r\n            setError('Failed to login: ' + (err.response?.data?.message || err.message));\r\n        }\r\n    };\r\n    const handleRegister = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/unlimitedmarketplace', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    userName: name,\r\n                    email: email,\r\n                    passwordHash: signupPassword\r\n                })\r\n            });\r\n\r\n            if (response.ok) {\r\n                setShowAnimation(true);  // This will trigger the animation\r\n                setTimeout(() => setShowAnimation(false), 5000);  // This will hide the animation after 5 seconds\r\n\r\n            } else {\r\n                const errorData = await response.json();\r\n                setError('Failed to register: ' + errorData.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to register:', error);\r\n            setError('Failed to register: ' + error.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Lottie Animation Display */}\r\n            <div style={{ width: '300px', height: '300px', margin: '0 auto' }}>\r\n                <Lottie animationData={testanimation} loop={true} />\r\n            </div>\r\n\r\n            {/* Your existing form and other UI elements... */}\r\n            <div className=\"form-container sign-up\">\r\n                {/* Sign-up form */}\r\n            </div>\r\n            <div className=\"form-container sign-in\">\r\n                {/* Sign-in form */}\r\n            </div>\r\n            <div className=\"toggle-container\">\r\n                {/* Toggle between sign-in and sign-up */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}