{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acidburn\\\\WebstormProjects\\\\untitled2\\\\src\\\\App.js\";\nimport './App.css';\nimport Login from './Login'; // Import your Login component\nimport Lottie from \"lottie-react\";\nimport testanimation from \"./testanimation.json\";\nimport axios from 'axios'; // You might need to install axios via npm if you haven't already\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const onLogin = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/unlimitedmarketplace/auth/login', {\n        username: username,\n        password: password\n      }).then(response => {\n        console.log(response.data);\n        // Handle successful login here\n      }).catch(error => {\n        console.error('Login failed:', error);\n        // Handle error here\n      });\n\n      // Here you can store the received JWT token from the response for future requests\n      // For example, in localStorage or context API for state management\n      localStorage.setItem('token', response.data.token); // Adjust based on actual response structure\n      console.log('Login successful', response.data);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error; // Throw error to catch it in the Login component for error handling\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","Lottie","testanimation","axios","jsxDEV","_jsxDEV","App","onLogin","username","password","response","post","then","console","log","data","catch","error","localStorage","setItem","token","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acidburn/WebstormProjects/untitled2/src/App.js"],"sourcesContent":["import './App.css';\nimport Login from './Login'; // Import your Login component\nimport Lottie from \"lottie-react\";\nimport testanimation from \"./testanimation.json\";\nimport axios from 'axios'; // You might need to install axios via npm if you haven't already\n\nfunction App() {\n    const onLogin = async (username, password) => {\n        try {\n            const response = await axios.post('http://localhost:8080/unlimitedmarketplace/auth/login', {\n                username: username,\n                password: password\n\n            })\n                .then(response => {\n                    console.log(response.data);\n                    // Handle successful login here\n                })\n                .catch(error => {\n                    console.error('Login failed:', error);\n                    // Handle error here\n                });\n\n            // Here you can store the received JWT token from the response for future requests\n            // For example, in localStorage or context API for state management\n            localStorage.setItem('token', response.data.token); // Adjust based on actual response structure\n            console.log('Login successful', response.data);\n        } catch (error) {\n            console.error('Login failed:', error);\n            throw error; // Throw error to catch it in the Login component for error handling\n        }\n    };\n\n    return (\n        <div>\n            <Login onLogin={onLogin}/>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,uDAAuD,EAAE;QACvFH,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MAEd,CAAC,CAAC,CACGG,IAAI,CAACF,QAAQ,IAAI;QACdG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZJ,OAAO,CAACI,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC;MACJ,CAAC,CAAC;;MAEN;MACA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACK,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC;MACpDP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACL,KAAK;MAACO,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd;AAACC,EAAA,GAhCQpB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}